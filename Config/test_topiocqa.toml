title = "the test script to test a model on topiocqa benchmarks"

# [Model]
query_encoder_checkpoint = "checkpoints/ad-hoc-ance-msmarco"   # !!!
# query_encoder_checkpoint = "output/train_topiocqa/Checkpoint/convq_hard_model-0-epoch-9-step-7110-loss-0.00013744694297201931"   # !!!
# query_encoder_checkpoint = "output/train_topiocqa/filter_ranking/alpha2_model-0-epoch-9-step-14210-loss-1.0220319032669067"   # !!!
# query_encoder_checkpoint = "output/train_topiocqa/Checkpoint/model-0-epoch-9-step-7110-loss-0.0001774583215592429"   # !!!
pretrained_passage_encoder = "checkpoints/ad-hoc-ance-msmarco"   # !!! 

max_concat_length = 512
max_query_length = 64
max_doc_length = 384
seed = 42

# [Model]
model_type = "ANCE"
# model_type = "ANCE_context_attention"

# [Test]

# since the passage collection is too big, we split it into several blocks and test block by block.
# Finally merge them to get the final results.
passage_block_num = 26 # 26 for topiocqa

per_gpu_eval_batch_size = 2
n_gpu = 1
use_gpu = true
top_n = 100
use_data_percent = 1
rel_threshold = 1
cross_validate = false
disable_tqdm = false
use_last_response = false
use_wrong_last_response = false
use_PRF = false
skip_all_zero = false
PRF_mode = "hard"
test_type = "rewrite"
eval_type = "oracle"
#topic_mode = "return"
#test_type = "context_fuse"


# test_file_path = "datasets/topiocqa/dev_new.json"
test_file_path = "output/topiocqa/QR/dev_t5_oracle.json"
test_file_path_2 = "output/topiocqa/QR/dev_QRIR_KD_answer_0.5_prefix.json"
gold_qrel_file_path = "datasets/topiocqa/ir_all_history_dev.json"
trec_gold_qrel_file_path = "datasets/topiocqa/dev_gold.trec"
PRF_file = "output/topiocqa/dense_rel/dev_rel_label_rawq_token.json"
# PRF_file = "datasets/topiocqa/dev_sub_topic_label.json"


passage_collection_path= "datasets/topiocqa/full_wiki_segments.tsv"
passage_embeddings_dir_path = "datasets/topiocqa/embeds"
passage_offset2pid_path = "datasets/topiocqa/tokenized/offset2pid.pickle"

# [Output]
qrel_output_path = "output/topiocqa/baseline_conv"   # will output two files: res.json and res.trec
